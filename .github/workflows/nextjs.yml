# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next
      - name: Install dependencies
        run: |
          npm install --force
          npm install -g tailwindcss postcss autoprefixer
          npm link tailwindcss postcss autoprefixer
          npx tailwindcss --version # Check if tailwindcss is properly installed
      - name: Prepare build environment
        run: |
          # Ensure all necessary Tailwind files are present
          echo "Creating Tailwind config files if needed"
          
          # Create a minimal globals.css file if it doesn't exist
          if [ ! -f app/globals.css ]; then
            mkdir -p app
            echo "@tailwind base;" > app/globals.css
            echo "@tailwind components;" >> app/globals.css
            echo "@tailwind utilities;" >> app/globals.css
          fi
          
          # Debug information
          echo "Directory structure:"
          ls -la
          echo "Node modules:"
          ls -la node_modules || echo "No node_modules folder found"
          echo "TailwindCSS installation:"
          npm list tailwindcss || echo "TailwindCSS not found in local dependencies"
          npm list -g tailwindcss || echo "TailwindCSS not found in global dependencies"
          
          # Force tailwindcss path to be available
          export NODE_PATH=$(npm root -g)
          echo "NODE_PATH=$NODE_PATH"
          
          # Copy Tailwind directly to local node_modules if it's not there
          if [ ! -d "node_modules/tailwindcss" ]; then
            echo "Copying global tailwindcss to local node_modules"
            mkdir -p node_modules/tailwindcss
            cp -r $(npm root -g)/tailwindcss/* node_modules/tailwindcss/
          fi
      - name: Build with Next.js
        run: |
          export NODE_PATH=$(npm root -g):$NODE_PATH
          echo "NODE_PATH=$NODE_PATH"
          NODE_OPTIONS=--enable-source-maps NEXT_TELEMETRY_DISABLED=1 npm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
