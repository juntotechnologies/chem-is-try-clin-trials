# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next
      
      - name: Install dependencies globally first
        run: |
          npm install -g tailwindcss postcss autoprefixer
          npm install -g next
      
      - name: Install project dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
          npm install --save-dev tailwindcss@3.4.1 postcss@8.4.35 autoprefixer@10.4.18
          
      - name: Create simpler globals.css
        run: |
          # Create a simpler globals.css without Tailwind directives
          cat > app/globals.css << 'EOL'
          body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: #f5f5f5;
            color: #333;
          }
          EOL
          
      - name: Create simpler config files
        run: |
          # Simple postcss.config.js
          cat > postcss.config.js << 'EOL'
          module.exports = {
            plugins: {
              tailwindcss: {},
              autoprefixer: {},
            },
          }
          EOL
          
          # Simple tailwind.config.js
          cat > tailwind.config.js << 'EOL'
          /** @type {import('tailwindcss').Config} */
          module.exports = {
            content: [
              './pages/**/*.{js,ts,jsx,tsx,mdx}',
              './components/**/*.{js,ts,jsx,tsx,mdx}',
              './app/**/*.{js,ts,jsx,tsx,mdx}',
            ],
            theme: {
              extend: {},
            },
            plugins: [],
          }
          EOL
          
          # Create .browserslistrc file
          cat > .browserslistrc << 'EOL'
          last 2 versions
          not dead
          > 0.5%
          EOL
          
      - name: Extensive debugging
        run: |
          echo "Current directory structure:"
          find . -type f -name "*.css" | sort
          echo "Node modules for Tailwind:"
          find node_modules -name "tailwindcss" | sort
          echo "Global modules:"
          npm list -g --depth=0
          echo "Local modules:"
          npm list --depth=0
          echo "Current directory files:"
          ls -la
          
      - name: Build without Tailwind
        run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          export NODE_PATH="$(npm root -g):$(npm root)"
          NEXT_IGNORE_MISSING_TAILWIND=1 npm run build
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
