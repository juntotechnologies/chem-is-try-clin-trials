# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next
      
      - name: Ensure .nojekyll file exists
        run: |
          touch ./public/.nojekyll
          echo "Created .nojekyll file to disable Jekyll processing"
      
      - name: Clean install dependencies with production flag
        run: |
          echo "Cleaning npm cache"
          npm cache clean --force
          
          echo "Installing all dependencies"
          npm install --legacy-peer-deps
          
          echo "Verifying critical packages are installed"
          if [ ! -d "node_modules/tailwindcss" ]; then
            echo "Tailwind CSS not found, installing directly"
            npm install --save-dev tailwindcss@3.4.1 postcss@8.4.35 autoprefixer@10.4.18 tailwindcss-animate@1.0.7
          fi
          
          echo "Verifying tailwindcss installation:"
          ls -la node_modules/tailwindcss/
          
          echo "Verifying package versions:"
          npm list tailwindcss postcss autoprefixer tailwindcss-animate
      
      - name: Create GitHub Pages-specific configurations
        run: |
          # Create optimized Next.js config for GitHub Pages
          cat > next.config.js << 'EOL'
          /** @type {import('next').NextConfig} */
          const nextConfig = {
            output: 'export',
            basePath: '/cit-clinical',
            assetPrefix: '/cit-clinical/',
            images: { unoptimized: true },
            typescript: { ignoreBuildErrors: true },
            eslint: { ignoreDuringBuilds: true },
            trailingSlash: true,
            // Only essential experimental features
            experimental: { 
              webpackBuildWorker: true 
            }
          }
          
          module.exports = nextConfig
          EOL
          echo "Created optimized next.config.js for GitHub Pages"
          
          # Create simple PostCSS config
          cat > postcss.config.js << 'EOL'
          module.exports = {
            plugins: {
              'tailwindcss': {},
              'autoprefixer': {},
            }
          }
          EOL
          echo "Created simplified postcss.config.js"
          
          # Create simplified tailwind config
          cat > tailwind.config.js << 'EOL'
          /** @type {import('tailwindcss').Config} */
          module.exports = {
            content: [
              './app/**/*.{js,ts,jsx,tsx,mdx}',
              './components/**/*.{js,ts,jsx,tsx,mdx}',
              './page.tsx',
            ],
            theme: {
              extend: {
                colors: {
                  background: "hsl(var(--background))",
                  foreground: "hsl(var(--foreground))",
                  card: {
                    DEFAULT: "hsl(var(--card))",
                    foreground: "hsl(var(--card-foreground))"
                  },
                  popover: {
                    DEFAULT: "hsl(var(--popover))",
                    foreground: "hsl(var(--popover-foreground))"
                  },
                  primary: {
                    DEFAULT: "hsl(var(--primary))",
                    foreground: "hsl(var(--primary-foreground))"
                  },
                  secondary: {
                    DEFAULT: "hsl(var(--secondary))",
                    foreground: "hsl(var(--secondary-foreground))"
                  },
                  muted: {
                    DEFAULT: "hsl(var(--muted))",
                    foreground: "hsl(var(--muted-foreground))"
                  },
                  accent: {
                    DEFAULT: "hsl(var(--accent))",
                    foreground: "hsl(var(--accent-foreground))"
                  },
                  destructive: {
                    DEFAULT: "hsl(var(--destructive))",
                    foreground: "hsl(var(--destructive-foreground))"
                  },
                  border: "hsl(var(--border))",
                  input: "hsl(var(--input))",
                  ring: "hsl(var(--ring))",
                },
                borderRadius: {
                  lg: "var(--radius)",
                  md: "calc(var(--radius) - 2px)",
                  sm: "calc(var(--radius) - 4px)"
                },
                keyframes: {
                  "accordion-down": {
                    from: { height: "0" },
                    to: { height: "var(--radix-accordion-content-height)" }
                  },
                  "accordion-up": {
                    from: { height: "var(--radix-accordion-content-height)" },
                    to: { height: "0" }
                  }
                },
                animation: {
                  "accordion-down": "accordion-down 0.2s ease-out",
                  "accordion-up": "accordion-up 0.2s ease-out"
                }
              }
            },
            plugins: [require("tailwindcss-animate")],
          }
          EOL
          echo "Created simplified tailwind.config.js"
      
      - name: Set environment variables
        run: |
          echo "NODE_ENV=production" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_BASE_PATH=/cit-clinical" >> $GITHUB_ENV
          echo "NEXT_TELEMETRY_DISABLED=1" >> $GITHUB_ENV
      
      - name: Print debug information
        run: |
          echo "Final directory structure:"
          ls -la
          echo "Node modules directory contents:"
          ls -la node_modules | grep tail
          echo "Tailwind directory contents:"
          ls -la node_modules/tailwindcss/ || echo "Tailwind directory not found"
          echo "PostCSS directory contents:"
          ls -la node_modules/postcss/ || echo "PostCSS directory not found"
          echo "Package versions from package.json:"
          npm list tailwindcss postcss autoprefixer tailwindcss-animate
          echo "Content of tailwind.config.js:"
          cat tailwind.config.js
          echo "Content of postcss.config.js:"
          cat postcss.config.js
          echo "Content of next.config.js:"
          cat next.config.js
      
      - name: Build with Next.js
        run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          echo "Starting Next.js build with NPX to ensure proper path resolution..."
          npx next build
          echo "Build completed successfully!"
      
      - name: Verify output
        run: |
          echo "Verifying build output..."
          echo "Files in output directory:"
          ls -la out/
          
          echo "CSS files generated:"
          find out -type f -name "*.css" | sort
          
          echo "Checking for critical files:"
          [ -f out/.nojekyll ] && echo "✅ .nojekyll file exists" || (echo "❌ .nojekyll file missing" && touch out/.nojekyll)
          [ -f out/index.html ] && echo "✅ index.html exists" || echo "❌ index.html missing"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
