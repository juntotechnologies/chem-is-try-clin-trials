# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next
      - name: Clean install dependencies
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json
          npm install --legacy-peer-deps
      - name: Install TailwindCSS and PostCSS
        run: |
          npm install --save-dev tailwindcss@3.4.17 postcss@8 autoprefixer
          echo "Installed packages:"
          npm list --depth=0 tailwindcss postcss autoprefixer
      - name: Verify CSS configuration
        run: |
          ls -la .
          ls -la app || echo "No app directory"
          cat tailwind.config.js || echo "No tailwind.config.js file"
          cat postcss.config.js || echo "No postcss.config.js file"
          echo "Contents of app/globals.css:"
          cat app/globals.css || echo "No globals.css file"
      - name: Create PostCSS config if missing
        run: |
          if [ ! -f postcss.config.js ]; then
            echo "Creating postcss.config.js"
            cat > postcss.config.js << 'EOF'
            module.exports = {
              plugins: {
                tailwindcss: {},
                autoprefixer: {},
              },
            }
            EOF
          fi
      - name: Create Tailwind config if missing
        run: |
          if [ ! -f tailwind.config.js ]; then
            echo "Creating tailwind.config.js"
            cat > tailwind.config.js << 'EOF'
            /** @type {import('tailwindcss').Config} */
            module.exports = {
              content: [
                "./app/**/*.{js,ts,jsx,tsx,mdx}",
                "./pages/**/*.{js,ts,jsx,tsx,mdx}",
                "./components/**/*.{js,ts,jsx,tsx,mdx}",
              ],
              theme: {
                extend: {},
              },
              plugins: [],
            }
            EOF
          fi
      - name: Build with Next.js
        run: |
          NODE_OPTIONS=--no-warnings NEXT_TELEMETRY_DISABLED=1 npm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
